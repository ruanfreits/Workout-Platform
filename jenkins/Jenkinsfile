#!/usr/bin/env groovy

pipeline {
    agent any
    
    environment{
        DOCKER_CREDS = credentials('github-Container-creds')
        IMAGE_TAGGED = "ghcr.io/ruanfreits/workout-platform-backend:latest"
    }
    stages {
        stage('Login to Docker') {
            steps {
                // Use the DOCKER_CREDS environment variable, which automatically
                // provides DOCKER_CREDS_USR and DOCKER_CREDS_PSW
                sh "docker login -u \$DOCKER_CREDS_USR -p \$DOCKER_CREDS_PSW ghcr.io"
            }
        }
        stage('Build-Jar-File') {
            agent {
                docker { image 'maven' }
            }
            steps {
                configFileProvider([configFile(fileId: '37568ccb-b1bc-447a-a416-3793483a5fcc',variable: 'APP_PROPS')]){
                sh 'cp $APP_PROPS src/main/resources/application.properties'
                sh 'mvn package -Dmaven.test.skip=true'
                sh 'mvn clean install -f pom.xml'
                // stash(name: 'my-artifact', includes: 'target/*.jar')
                }
            }

            post {
                always {
                    archiveArtifacts artifacts: 'target/*.jar', onlyIfSuccessful: true
                }
        }
    }

        stage('Build-Image') {
            steps {
                copyArtifacts(
                    projectName: "${env.JOB_NAME}",
                    selector: specific ("${BUILD_NUMBER}"),
                    filter: 'target/*.jar',
                )
                script {
                    sh 'ls target/*.jar'
                    app = docker.build("gym-project/test")
                    sh 'docker tag gym-project/test:latest \$IMAGE_TAGGED'
                    sh 'docker push \$IMAGE_TAGGED'
                }
            }
        }
        stage('Deploy'){
            steps{
                sshagent(credentials: ['remote-user']) {
                        sh '''
                            ssh vboxuser@192.168.0.72 "docker pull \$IMAGE_TAGGED && docker run -d  -p 8080:8080 --name java_api \$IMAGE_TAGGED"
                        '''
                    }
        }
    }

    }
}